<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Thu Apr  5 16:42:15 2012

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="MyAIDAProcessor"/>
      <processor name="MyCMSPixelReader"/>
      <!--processor name="MyCMSPixelCalibrateEventProcessor"/-->
      <processor name="MyLCIOOutputProcessor"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> </parameter>
      <parameter name="GearXMLFile" value="@GearFile@"/>
      <parameter name="MaxRecordNumber" value="@NumEvents@"/>
      <parameter name="SkipNEvents" value="0"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="MESSAGE"/>
   </global>

 <processor name="MyAIDAProcessor" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@Output@"/>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string" value="root"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="MyCMSPixelReader" type="CMSPixelReader">
 <!--Reads PSI46 testboard data files and creates LCEvents (zero suppressed data as sparsePixel).
Make sure to not specify any LCIOInputFiles in the steering in order to read CMSPixel files.-->
  <!--Name of the output sparsified data collection-->
  <parameter name="sparseDataCollectionName" type="string" lcioOutType="TrackerData"> data </parameter>
  <!--Input file-->
  <parameter name="FileName" type="string" value="@Native@"/>
  <!--Switch on or off the histogram filling-->
  <parameter name="HistogramFilling" type="bool" value="true"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--Address levels calibration file for the TBM and ROC address encoding levels.-->
  <parameter name="addressLevelsFile" type="string" value=""/>
  <!--Enable or disable DEBUG mode of the Decoder routine.-->
  <parameter name="debugDecoder" type="int" value="@debugDec@"/>
  <!--Switch between strict and lazy decoding. Lazy decoding will not check for correct TBM trailers and a valid data length. DO NOT USE unless you have a binary file that can't be decoded using strict mode (e.g. corrupted TBM trailers).-->
  <parameter name="lazyDecoding" type="bool" value="true"/>
  <!--Select the events to process: 0 - all, 1 - only with correct No. of ROC headers, 2 - only with corr. ROC headers and without bit errors in them.-->
  <parameter name="eventSelection" type="int" value="@evtSelection@"/>
  <!--Switch TBM mode on and off. This gives the possibility to read data without real or emulated TBM headers as seen from soem testboard FPGAs. TRUE will look for TBM headers and trailers.-->
  <parameter name="haveTBMheaders" type="bool" value="@TBMheaders@"/>
  <!--int vector to hold the telescope plane IDs in the order in which they get the readout token.-->
  <parameter name="shufflePlanes" type="IntVec"> 0 1 2 3 7 6 5 4 </parameter>
  <!--RunNumber-->
  <parameter name="runNumber" type="int" value="@RunNumber@"/>
  <!--Enable or disable the writing of events with no hit in all sensor planes.-->
  <parameter name="writeEmptyEvents" type="bool" value="@emptyEvents@"/>
  <!--Choose whether you have digital ROC data to decode or analogue.-->
  <parameter name="digitalROC" type="bool" value="@digitalROC@"/>
  <!-- Switch from USB readout format (Altera board) to the IPBus readout format (Xilinx board). -->
  <parameter name="useIPBus" type="bool" value="@useIPBus@"/>
</processor>

<processor name="MyCMSPixelCalibrateEventProcessor" type="CMSPixelCalibrateEventProcessor">
 <!--CMSPixelCalibrateEventProcessor calibrates the input data according to the tanh fit performed by a module full test with psi46expert.-->
  <!--Input zero suppressed data collection-->
  <parameter name="sparseDataCollectionName" type="string" lcioInType="TrackerData"> sparse </parameter>
  <!--Name of the output calibrated data collection-->
  <parameter name="CalibratedDataCollectionName" type="string" lcioOutType="TrackerData"> data </parameter>
  <!--Type of sparsified pixel data structure (use SparsePixelType enum)-->
  <parameter name="SparsePixelType" type="int" value="1"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--Calibration file prefix containing the p0 - p3 parameters for the Tanh fit. Use %i for the ROC number.-->
  <parameter name="calibrationFile" type="string" value="@RunNumber@/phCalibrationFit60_C%i.dat"/>
  <parameter name="calibrationType" type="bool" value="true"/>
  <!--Switch on or off the histogram filling-->
  <parameter name="HistogramFilling" type="bool" value="true"/> 
</processor>

<processor name="MyLCIOOutputProcessor" type="LCIOOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <parameter name="DropCollectionNames" type="StringVec"> sparse </parameter>
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@Output@.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

</marlin>