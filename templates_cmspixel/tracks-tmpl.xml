<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
Steering File generated by Marlin GUI on Mon May  7 14:36:24 2012

WARNING: - Please be aware that comments made in the original steering file were lost.
- Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
- Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

  <execute>
    <processor name="MyAIDAProcessor"/>
    <processor name="LoadRefHitDB"/>
    <processor name="LoadPreAlignment"/>
    <processor name="MyEUTelApplyPreAlignment"/>
    <processor name="LoadAlignment"/>
    <processor name="MyEUTelApplyAlignment"/>
    <processor name="MyEUTelTestFitter"/>
    <processor name="MyLCIOOutputProcessor"/>
    <!--processor name="DUTHisto"/-->
    <!--processor name="MyEUTelFitTuple"/-->
    <processor name="MyEUTelUtilityPrintEventNumber"/>
  </execute>

  <global>
    <parameter name="LCIOInputFiles"> @ResultsPath@/@RunNumber@-hitmaker.slcio </parameter>
    <parameter name="GearXMLFile" value="@GeometryPath@/@GearFile@"/>
    <parameter name="MaxRecordNumber" value="@NumEvents@"/>
    <parameter name="SkipNEvents" value="0"/>
    <parameter name="SupressCheck" value="false"/>
    <parameter name="Verbosity" value="MESSAGE"/>
  </global>

  <processor name="MyAIDAProcessor" type="AIDAProcessor">
    <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
    <!-- compression of output file 0: false >0: true (default) -->
    <parameter name="Compress" type="int" value="1"/>
    <!-- filename without extension-->
    <parameter name="FileName" type="string" value="@HistogramPath@/@RunNumber@-tracks"/>
    <!-- type of output file root (default) or xml )-->
    <parameter name="FileType" type="string" value="root"/>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string" value=""/-->
  </processor>

<processor name="LoadRefHitDB" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> refhit @DatabasePath@/@RunNumber@-reference.slcio refhit </parameter>
</processor>

  <processor name="LoadPreAlignment" type="ConditionsProcessor">
    <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
    <!--Initialization of a conditions database handler-->
    <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
    <!--Initialization of a conditions db file handler-->
    <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
    <!--Initialization string for conditions database-->
    <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
    <!--Initialization of a data file handler-->
    <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
    <!--Initialization of a simple conditions file handler-->
    <parameter name="SimpleFileHandler" type="StringVec"> prealign @DatabasePath@/@RunNumber@-prealignment.slcio alignment </parameter>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string" value=""/-->
  </processor>

  <processor name="MyEUTelApplyPreAlignment" type="EUTelApplyAlignmentProcessor">
    <!--Apply to the input hit the alignment corrections-->
    <!--Alignment constant from the condition file-->
    <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> prealign </parameter>
    <!--The name of the input hit collection-->
    <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hits </parameter>
    <!--The name of the output hit collection-->
    <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> prealignedhits </parameter>
    <!--Rotation Angle around X axis-->
    <!--parameter name="Alpha" type="double" value="0"/-->
    <!--Available directinos are:
	0 --> direct  
    1 --> reverse -->
    <parameter name="ApplyAlignmentDirection" type="int" value="0"/>
    <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
    <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
    <!--Rotation Angle around Y axis-->
    <!--parameter name="Beta" type="double" value="0"/-->
    <!--Available methods are:
	0 --> shift only 
    1 --> rotation first 
    2 --> shift first -->
    <parameter name="CorrectionMethod" type="int" value="1"/>
    <!--Enable or disable DEBUG mode -->
    <parameter name="DEBUG" type="bool" value="false"/>
    <!--Implement geometry shifts and rotations as described in alignmentCollectionName -->
    <parameter name="DoAlignCollection" type="bool" value="true"/>
    <!--Implement geometry shifts and rotations as described in GEAR steering file -->
    <!--parameter name="DoGear" type="bool" value="false"/-->
    <!--Rotation Angle around Z axis-->
    <!--parameter name="Gamma" type="double" value="0"/-->
    <!--Enable or disable histograms-->
    <parameter name="HistogramSwitch" type="bool" value="true"/>
    <!--Events number to have DEBUG1 printed outs (default=10)-->
    <parameter name="PrintEvents" type="int" value="0"/>
    <!--This is the name of the reference it collection (init at 0,0,0)-->
    <parameter name="ReferenceCollection" type="string" value="refhit"/>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string" value=""/-->
    <!--List of alignment collections that were applied to the DUT-->
    <parameter name="alignmentCollectionNames" type="StringVec" value="prealign"/>
  </processor>

  <processor name="LoadAlignment" type="ConditionsProcessor">
    <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
    <!--Initialization of a conditions database handler-->
    <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
    <!--Initialization of a conditions db file handler-->
    <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
    <!--Initialization string for conditions database-->
    <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
    <!--Initialization of a data file handler-->
    <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
    <!--Initialization of a simple conditions file handler-->
    <parameter name="SimpleFileHandler" type="StringVec"> align @DatabasePath@/@RunNumber@-alignment.slcio alignment </parameter>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string" value=""/-->
  </processor>

  <processor name="MyEUTelApplyAlignment" type="EUTelApplyAlignmentProcessor">
    <!--Apply to the input hit the alignment corrections-->
    <!--Alignment constant from the condition file-->
    <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> align </parameter>
    <!--The name of the input hit collection-->
    <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> prealignedhits </parameter>
    <!--The name of the output hit collection-->
    <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> alignedhits </parameter>
    <!--Rotation Angle around X axis-->
    <!--parameter name="Alpha" type="double" value="0"/-->
    <!--Available directinos are:
	0 --> direct  
    1 --> reverse -->
    <parameter name="ApplyAlignmentDirection" type="int" value="0"/>
    <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
    <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
    <!--Rotation Angle around Y axis-->
    <!--parameter name="Beta" type="double" value="0"/-->
    <!--Available methods are:
	0 --> shift only 
    1 --> rotation first 
    2 --> shift first -->
    <parameter name="CorrectionMethod" type="int" value="1"/>
    <!--Enable or disable DEBUG mode -->
    <parameter name="DEBUG" type="bool" value="false"/>
    <!--Implement geometry shifts and rotations as described in alignmentCollectionName -->
    <parameter name="DoAlignCollection" type="bool" value="true"/>
    <!--Implement geometry shifts and rotations as described in GEAR steering file -->
    <!--parameter name="DoGear" type="bool" value="false"/-->
    <!--Rotation Angle around Z axis-->
    <!--parameter name="Gamma" type="double" value="0"/-->
    <!--Enable or disable histograms-->
    <parameter name="HistogramSwitch" type="bool" value="true"/>
    <!--Events number to have DEBUG1 printed outs (default=10)-->
    <parameter name="PrintEvents" type="int" value="0"/>
    <!--This is the name of the reference it collection (init at 0,0,0)-->
    <parameter name="ReferenceCollection" type="string" value="refhit"/>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string" value=""/-->
    <!--List of alignment collections that were applied to the DUT-->
    <parameter name="alignmentCollectionNames" type="StringVec" value="align"/>
  </processor>

  <processor name="MyEUTelTestFitter" type="EUTelTestFitter">
    <!--Analytical track fitting processor for EUDET telescope-->
    <!--Name of the input TrackerHit collection-->
    <parameter name="InputCollectionName" type="string" lcioInType="TrackerHit"> alignedhits </parameter>
    <!--Collection name for corrected particle positions-->
    <!--parameter name="CorrectedHitCollectionName" type="string" lcioOutType="TrackerHit"> alignedhits </parameter-->
    <!--Collection name for fitted particle hits (positions)-->
    <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> fithits </parameter>
    <!--Collection name for fitted tracks-->
    <parameter name="OutputTrackCollectionName" type="string" lcioOutType="Track"> fittracks </parameter>
    <!--Ids of layers for which alignment corrections are given-->
    <!--parameter name="AlignLayerIDs" type="IntVec"> </parameter-->
    <!--Rotation around Z for layer alignment-->
    <!--parameter name="AlignLayerRotZ" type="FloatVec"> </parameter-->
    <!--Alignment corrections in X for these layers-->
    <!--parameter name="AlignLayerShiftX" type="FloatVec"> </parameter-->
    <!--Alignment corrections in Y for these layers-->
    <!--parameter name="AlignLayerShiftY" type="FloatVec"> </parameter-->
    <!--Allow same hit to be used in more than one track-->
    <!--parameter name="AllowAmbiguousHits" type="bool" value="false"/-->
    <!--Allowed number of missing hits in the track-->
    <parameter name="AllowMissingHits" type="int" value="1"/>
    <!--Allowed number of hits removed from the track-->
    <parameter name="AllowSkipHits" type="int" value="1"/>
    <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
    <parameter name="ApplyToReferenceCollection" type="bool" value="false"/>
    <!--Beam direction tilt in X-Z plane [rad] (for beam constraint)-->
    <!--parameter name="BeamSlopeX" type="double" value="0"/-->
    <!--Beam direction tilt in Y-Z plane [rad] (for beam constraint)-->
    <!--parameter name="BeamSlopeY" type="double" value="0"/-->
    <!--Assumed angular spread of the beam [rad] (for beam constraint)-->
    <!--parameter name="BeamSpread" type="double" value="0.1"/-->
    <!--Maximum Chi2 for accepted track fit-->
    <parameter name="Chi2Max" type="double" value="5000"/>
    <!--Print out every DebugEnevtCount event-->
    <parameter name="DebugEventCount" type="int" value="1"/>
    <!--Beam energy [GeV]-->
    <parameter name="Ebeam" type="double" value="280"/>
    <!--Name of the histogram information file-->
    <parameter name="HistoInfoFileName" type="string" value=""/>
    <!--Flag for storing input (measured) hits in track-->
    <parameter name="InputHitsInTrack" type="bool" value="true"/>
    <!--Ids of layers for which position masks are applied-->
    <!--parameter name="MaskLayerIDs" type="IntVec"> </parameter-->
    <!--Upper mask edge in X-->
    <!--parameter name="MaskMaxX" type="FloatVec"> </parameter-->
    <!--Upper mask edge in Y-->
    <!--parameter name="MaskMaxY" type="FloatVec"> </parameter-->
    <!--Lower mask edge in X-->
    <!--parameter name="MaskMinX" type="FloatVec"> </parameter-->
    <!--Lower mask edge in Y-->
    <!--parameter name="MaskMinY" type="FloatVec"> </parameter-->
    <!--Maximum number of considered hits per plane-->
    <parameter name="MaxPlaneHits" type="int" value="100"/>
    <!--Maximum number of hits to be shared by more than one track-->
    <!--parameter name="MaximumAmbiguousHits" type="int" value="2"/-->
    <!--Chi2 penalty for missing hit in the track-->
    <parameter name="MissingHitPenalty" type="double" value="0"/>
    <!--Flag for storing output (fitted) hits in track-->
    <parameter name="OutputHitsInTrack" type="bool" value="true"/>
    <!--Ids of layers which should be treated as passive in the fit-->
    <parameter name="PassiveLayerIDs" type="IntVec"> 4 </parameter>
    <!--reference hit collection name -->
    <parameter name="ReferenceCollection" type="string" value="refhit"/>
    <!--X resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
    <parameter name="ResolutionX" type="FloatVec"> @ResolutionX@ </parameter>
    <!--Y resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
    <parameter name="ResolutionY" type="FloatVec"> @ResolutionY@ </parameter>
    <!--Z resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
    <parameter name="ResolutionZ" type="FloatVec"> @ResolutionZ@ </parameter>
    <!--Flag for searching multiple tracks in events with multiple hits-->
    <parameter name="SearchMultipleTracks" type="bool" value="true"/>
    <!--Chi2 penalty for removing hit from the track-->
    <parameter name="SkipHitPenalty" type="double" value="100"/>
    <!--Ids of layers which should NOT be included in the fit-->
    <!--parameter name="SkipLayerIDs" type="IntVec"> </parameter-->
    <!--Maximum hit distance from the expected position, used for hit preselection-->
    <parameter name="SlopeDistanceMax" type="float" value="10000"/>
    <!--Limit on track slope change when passing sensor layer (in X direction)-->
    <parameter name="SlopeXLimit" type="float" value="20"/>
    <!--Limit on track slope change when passing sensor layer (in Y direction)-->
    <parameter name="SlopeYLimit" type="float" value="20"/>
    <!--Flag for using beam direction constraint in the fit-->
    <!--parameter name="UseBeamConstraint" type="bool" value="false"/-->
    <!--Flag for including DUT measurement in the fit-->
    <parameter name="UseDUT" type="bool" value="true"/>
    <!--Flag for using nominal resolution instead of position errors-->
    <parameter name="UseNominalResolution" type="bool" value="false"/>
    <!--Use expected track direction to constraint number of considered hit combinations (track preselection).-->
    <!--parameter name="UseSlope" type="bool" value="true"/-->
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string" value=""/-->
    <!--Ids of layers for which position window cut are applied-->
    <!--parameter name="WindowLayerIDs" type="IntVec"> </parameter-->
    <!--Upper window edge in X-->
    <!--parameter name="WindowMaxX" type="FloatVec"> </parameter-->
    <!--Upper window edge in Y-->
    <!--parameter name="WindowMaxY" type="FloatVec"> </parameter-->
    <!--Lower window edge in X-->
    <!--parameter name="WindowMinX" type="FloatVec"> </parameter-->
    <!--Lower window edge in Y-->
    <!--parameter name="WindowMinY" type="FloatVec"> </parameter-->
    <!--List of alignment collections which are needed to get track position on a Sensor surface -->
    <parameter name="alignmentCollectionNames" type="StringVec" value="prealign align"/>
  </processor>

  <processor name="DUTHisto" type="EUTelDUTHistograms">
    <!--Analysis of DUT performance based on the analytic track fit results-->
    <!--Name of the input DUT hit collection-->
    <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hits </parameter>
    <!--Name of the input Track collection-->
    <parameter name="InputTrackCollectionName" type="string" lcioInType="Track"> fittracks </parameter>
    <!--Alignment corrections for DUT: shift (in mm) in X, Y and rotation around Z-->
    <parameter name="DUTalignment" type="FloatVec"> 0 0 0 </parameter>
    <!--DUT sensor pitch in X-->
    <parameter name="DUTpitchX" type="double" value="0.15"/>
    <!--DUT sensor pitch in Y-->
    <parameter name="DUTpitchY" type="double" value="0.10"/>
    <!--Print out every DebugEnevtCount event-->
    <parameter name="DebugEventCount" type="int" value="100"/>
    <!--Maximum allowed distance between fit and matched DUT hit-->
    <parameter name="DistMax" type="double" value="1000.0"/>
    <!--Name of the histogram information file-->
    <parameter name="HistoInfoFileName" type="string" value="histoinfo.xml"/>
    <!--Id of telescope layer which should be used as DUT-->
    <parameter name="ManualDUTid" type="int" value="4"/>
    <!--Flag for manual DUT selection-->
    <parameter name="UseManualDUT" type="bool" value="true"/>
    <parameter name="onlyIntimeTracks" type="bool" value="true" />
    <parameter name="referencePlaneID" type="int" value="0" />
    <parameter name="DistMaxReference" type="double" value="1000.0" />  
  </processor>

  <processor name="MyEUTelFitTuple" type="EUTelFitTuple">
    <!--Prepare n-tuple with track fit results-->
    <!--Name of the input Track collection-->
    <parameter name="InputCollectionName" type="string" lcioInType="Track"> fittracks </parameter>
    <!--Name of the input DUT hit collection-->
    <parameter name="InputDUTCollectionName" type="string" lcioInType="TrackerHit"> hits </parameter>
    <!--Alignment corrections for DUT: shift in X, Y and rotation around Z-->
    <parameter name="DUTalignment" type="FloatVec"> 0 0 0 </parameter>
    <!--Matching window for detection efficiency-->
    <!--parameter name="DUTalignmentForEfficiency" type="FloatVec"> </parameter-->
    <parameter name="Xwindow" type="double"> 0.13 </parameter>
    <parameter name="Ywindow" type="double"> 0.09 </parameter>
    <!--Print out every DebugEnevtCount event-->
    <parameter name="DebugEventCount" type="int" value="100"/>
    <!--Maximum allowed distance between fit and matched DUT hit-->
    <parameter name="DistMax" type="double" value="1."/>
    <!--Id of telescope layer which should be used as DUT-->
    <parameter name="ManualDUTid" type="int" value="4"/>
    <!--Value used for missing measurements-->
    <parameter name="MissingValue" type="double" value="-100"/>
    <!--Flag for manual DUT selection-->
    <parameter name="UseManualDUT" type="bool" value="true"/>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string" value=""/-->
  </processor>

  <processor name="MyLCIOOutputProcessor" type="LCIOOutputProcessor">
    <!--Writes the current event to the specified LCIO outputfile. Needs to be the last ActiveProcessor.-->
    <!--drops the named collections from the event-->
    <!--parameter name="DropCollectionNames" type="StringVec"> TPCHits HCalHits </parameter-->
    <!--drops all collections of the given type from the event-->
    <!--parameter name="DropCollectionTypes" type="StringVec"> TrackerData TrackerPulse </parameter-->
    <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
    <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
    <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
    <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
    <!-- name of output file -->
    <parameter name="LCIOOutputFile" type="string" value="@ResultsPath@/@RunNumber@-tracks.slcio"/>
    <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
    <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
    <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
    <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string" value=""/-->
  </processor>

  <processor name="MyEUTelUtilityPrintEventNumber" type="EUTelUtilityPrintEventNumber">
    <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
    <!--Print event number every n Events (default 100)-->
    <parameter name="EveryNEvents" type="int" value="@PrintNEvents@"/>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <parameter name="printTimestamp" type="bool" value="false" />
    <!--parameter name="Verbosity" type="string" value="DEBUG"/-->
  </processor>

</marlin>
